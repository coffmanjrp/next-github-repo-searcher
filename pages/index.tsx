import { useState } from 'react';
import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import { useQuery } from 'react-query';
import axios from 'axios';
import { Box, Code, Grid, Heading, Link, Flex, Text } from '@chakra-ui/react';
import Card from '@/components/Card';

const Home: NextPage = () => {
  const [username, setUsername] = useState<string>('coffmanjrp');

  const { data, isLoading } = useQuery('github', async () => {
    const { data } = await axios.get(
      `https://api.github.com/users/${username}/repos`,
      {
        params: {
          per_page: 5,
          sort: 'created:asc',
          client_id: process.env.GITHUB_CLIENT_ID,
          client_secret: process.env.GITHUB_CLIENT_SECRET,
        },
      }
    );

    return data;
  });

  if (isLoading) {
    return <Text>Loading...</Text>;
  }

  if (!data) {
    return <Text>Error Occured</Text>;
  }

  return (
    <Box py={0} px={8}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Flex
        as="main"
        minH="100vh"
        py={16}
        px={0}
        flex={1}
        flexDirection="column"
        justifyContent="center"
        alignItems="center"
      >
        <Heading as="h1" m={0} lineHeight="1.15" size="4xl" textAlign="center">
          Welcome to{' '}
          <Link href="https://nextjs.org" color="teal.400" isExternal>
            Next.js!
          </Link>
        </Heading>

        <Text
          my={16}
          mx={0}
          lineHeight="1.5"
          fontSize="1.5rem"
          textAlign="center"
        >
          Get started by editing{' '}
          <Code p={2} fontSize="1.1rem" borderRadius="5px">
            pages/index.tsx
          </Code>
        </Text>

        <Grid
          templateColumns={{ md: 'repeat(2, 1fr)' }}
          templateRows={{ base: '1fr' }}
          alignItems="center"
          justifyContent="center"
          gap={4}
          maxW="800px"
        >
          {data.map((item: any) => (
            <Card key={item.id} {...{ item }} />
          ))}
        </Grid>
      </Flex>

      <Flex
        as="footer"
        flex={1}
        py={8}
        px={0}
        borderTop="1px"
        borderStyle="solid"
        borderColor="gray.300"
        justifyContent="center"
        alignItems="center"
      >
        <Link
          href="https://vercel.com?utm_source=create-next-app&amp;utm_medium=default-template&amp;utm_campaign=create-next-app"
          display="flex"
          alignItems="center"
          justifyContent="center"
          flexGrow={1}
          isExternal
        >
          Powered by{' '}
          <Box as="span" h="1em" ml={2}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </Box>
        </Link>
      </Flex>
    </Box>
  );
};

export default Home;
